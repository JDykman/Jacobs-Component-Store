name: Organize Components

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Why are you organizing components?'
        required: false
        default: 'Manual run'

permissions:
  contents: write

jobs:
  organize:
    runs-on: ubuntu-latest
    outputs:
      changes_made: ${{ steps.organize.outputs.changes_made }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci || npm i

      - name: Update TOC (pre)
        run: npm run update:toc

      - name: AI Organize and Update TOC
        id: organize
        env:
          GOOGLE_API_KEY: ${{ secrets.GEMIKEY }}
        run: npm run organize:components

      - name: Update TOC (post)
        run: npm run update:toc

      - name: Generate commit message
        id: commit-msg
        run: |
          if [ "${{ steps.organize.outputs.changes_made }}" = "true" ]; then
            echo "message=chore(components): AI organize and update TOC" >> $GITHUB_OUTPUT
            echo "body=AI workflow completed successfully with component reorganization." >> $GITHUB_OUTPUT
          else
            echo "message=chore(components): Update TOC only" >> $GITHUB_OUTPUT
            echo "body=No component moves were made. Only TOC was updated." >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "${{ steps.commit-msg.outputs.message }}" -m "${{ steps.commit-msg.outputs.body }}"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Comment on commit
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the detailed summary files
            let summaryData = {};
            let markdownContent = '';
            
            try {
              // Read JSON summary for structured data
              const jsonContent = fs.readFileSync('ai-changes-summary.json', 'utf8');
              summaryData = JSON.parse(jsonContent);
              
              // Read markdown for formatted display
              markdownContent = fs.readFileSync('AI_CHANGES_SUMMARY.md', 'utf8');
            } catch (e) {
              console.log('Could not read summary files:', e.message);
              // Provide fallback information
              summaryData = {
                timestamp: new Date().toISOString(),
                changes: {
                  moves: [],
                  toc_sections: {},
                  notes: ['Summary files could not be read, but the workflow completed successfully.']
                }
              };
            }
            
            // Build a comprehensive comment with all information
            let comment = `🤖 **AI Component Organization Complete**\n\n`;
            
            // Add timestamp
            if (summaryData.timestamp) {
              const timestamp = new Date(summaryData.timestamp).toLocaleString();
              comment += `⏰ **Generated:** ${timestamp}\n\n`;
            }
            
            // Check if any changes were made
            const hasChanges = summaryData.changes && (
              (summaryData.changes.moves && summaryData.changes.moves.length > 0) ||
              (summaryData.changes.toc_sections && Object.keys(summaryData.changes.toc_sections).length > 0)
            );
            
            if (!hasChanges) {
              comment += `ℹ️ **No structural changes were made**\n\n`;
            }
            
            // Add component moves if any
            if (summaryData.changes && summaryData.changes.moves && summaryData.changes.moves.length > 0) {
              comment += `📁 **Component Moves:**\n`;
              comment += `\n`;
              for (const move of summaryData.changes.moves) {
                const status = move.status === 'success' ? '✅' : '❌';
                comment += `${status} \`${move.from}\` → \`${move.to}\`\n`;
                if (move.error) {
                  comment += `   - Error: ${move.error}\n`;
                }
              }
              comment += '\n';
            }
            
            // Add new TOC structure if any
            if (summaryData.changes && summaryData.changes.toc_sections && Object.keys(summaryData.changes.toc_sections).length > 0) {
              comment += `📋 **New Table of Contents Structure:**\n`;
              comment += `\n`;
              for (const [section, components] of Object.entries(summaryData.changes.toc_sections)) {
                comment += `**${section}**\n`;
                for (const component of components) {
                  comment += `  • ${component}\n`;
                }
                comment += `\n`;
              }
            }
            
            // Add AI notes if any
            if (summaryData.changes && summaryData.changes.notes && summaryData.changes.notes.length > 0) {
              comment += `💡 **AI Insights & Recommendations:**\n`;
              comment += `\n`;
              for (const note of summaryData.changes.notes) {
                comment += `• ${note}\n`;
              }
              comment += `\n`;
            }
            
            // Add footer
            comment += `---\n\n`;
            comment += `📖 **Full Summary**: All changes and notes are displayed above. No artifacts to download!`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: comment
            });

      - name: Cleanup temporary files
        if: always()
        run: |
          rm -f ai-changes-summary.json AI_CHANGES_SUMMARY.md
